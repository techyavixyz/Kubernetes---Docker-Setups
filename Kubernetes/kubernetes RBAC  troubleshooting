%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Error 01 
//after joining cluster if you encountring an error while verifying resounces 

root@ip-172-31-82-66:~# kubectl get pod
E1004 05:30:44.151061    7830 memcache.go:265] couldn't get current server API group list: Get "http://localhost:8080/api?timeout=32s": dial tcp 127.0.0.1:8080: connect: connection refused
E1004 05:30:44.151436    7830 memcache.go:265] couldn't get current server API group list: Get "http://localhost:8080/api?timeout=32s": dial tcp 127.0.0.1:8080: connect: connection refused
E1004 05:30:44.152916    7830 memcache.go:265] couldn't get current server API group list: Get "http://localhost:8080/api?timeout=32s": dial tcp 127.0.0.1:8080: connect: connection refused
E1004 05:30:44.153213    7830 memcache.go:265] couldn't get current server API group list: Get "http://localhost:8080/api?timeout=32s": dial tcp 127.0.0.1:8080: connect: connection refused
E1004 05:30:44.154668    7830 memcache.go:265] couldn't get current server API group list: Get "http://localhost:8080/api?timeout=32s": dial tcp 127.0.0.1:8080: connect: connection refused
The connection to the server localhost:8080 was refused - did you specify the right host or port


Soultion : 

step 1. 

Check Kubelet Configuration: Ensure that the kubelet is configured to communicate with the API server. You can check the kubelet configuration file at /etc/kubernetes/kubelet.conf to verify the API server endpoint.


cat /etc/kubernetes/kubelet.conf

Look for the server line. It should point to the master node's API server, typically something like https://<master-ip>:6443.

Step 2. 

Ensure that kubectl is using the correct kubeconfig file. The default is ~/.kube/config, but you can specify a different one with:


export KUBECONFIG=/etc/kubernetes/kubelet.conf


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%